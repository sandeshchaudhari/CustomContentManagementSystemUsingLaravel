<?php

namespace App\Http\Controllers;

use App\Http\Requests\UsersRequest;
use App\Photo;
use App\Role;
use App\User;

use Illuminate\Support\Facades\Session;

class AdminUsersController extends Controller {
	/**
	 * Display a listing of the resource.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function index() {
		$users = User::all();
		return view('admin.users.index', compact('users'));
	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function create() {
		$roles = Role::pluck('name', 'id')->all();
		// dd($roles);
		return view('admin.users.create', compact('roles'));
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @param  \Illuminate\Http\Request $request
	 * @return \Illuminate\Http\Response
	 */
	public function store(UsersRequest $request) {

		$input = $request->all();

		if ($file = $request->file('photo_id')) {
			$name = $file->getClientOriginalName();
			$file->move('images', $name);
			$photo             = Photo::create(['file_name' => $name]);
			$input['photo_id'] = $photo->id;
			//$user->file_name=$name;
		}
		$input['password'] = bcrypt($request->password);
		User::create($input);
		return redirect('/admin/users');

	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int $id
	 * @return \Illuminate\Http\Response
	 */
	public function show($id) {
		//
	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int $id
	 * @return \Illuminate\Http\Response
	 */
	public function edit($id) {
		$roles = Role::pluck('name', 'id')->all();
		$user  = User::find($id);
		return view('admin.users.edit', compact('user', 'roles'));
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  \Illuminate\Http\Request $request
	 * @param  int $id
	 * @return \Illuminate\Http\Response
	 */
	public function update(UsersRequest $request, $id) {

		if (trim($request->password) == '') {
			$input = $request->except('password');
		} else {
			$input             = $request->all();
			$input['password'] = bcrypt($request->password);
		}
		$user = User::findOrFail($id);
		if ($file = $request->file('photo_id')) {
			$name = $file->getClientOriginalName();
			$file->move('images', $name);

			$photo = Photo::findOrFail($user->photo_id);
			$photo->update(['file_name' => $name]);
			//$photo=Photo::create(['file_name'=>$name]);
			$input['photo_id'] = $photo->id;
		}
		$user = User::findOrFail($id);
		$user->update($input);
		return redirect('/admin/users');

	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int $id
	 * @return \Illuminate\Http\Response
	 */
	public function destroy($id) {
		Session::flash('deleted_user', 'User has been deleted successfully');
		$user = User::findOrFail($id);
		if (file_exists(public_path().'/images/'.$user->photo->file_name)) {
			unlink(public_path().'/images/'.$user->photo->file_name);
		}
		$user->delete();
		return redirect()->back();
	}
}